nosana:
  description: Python Tests

global:
  image: python:3.10

jobs:
  - name: Install dependencies
    commands:
      # Initialize
      - curl -sS https://sh.rustup.rs | sh -s -- -y
      - . "$HOME/.cargo/env"
      - pip install .[dev] -t ./packages
      - ls -all
    artifacts:
      - name: packages

  - name: Check Python Entrypoint
    commands: 
      - python -c "import nucypher; print(nucypher.__version__)"
    resources:
      - name: packages
  
  ## Tests
  - name: Unit Tests (Coverage)
    commands: 
       - export PYTHONPATH=./packages
       - python -m coverage run --data-file=unit_data -m pytest tests/unit
       - python -m coverage xml -i --data-file=unit_data -o reports/unit-coverage.xml
    resources:
       - name: packages
    artifacts:
      - name: reports

  - name: Integration Tests (Coverage)
    commands:
      - export PYTHONPATH=./packages
      - python -m coverage run --data-file=integration_data -m pytest tests/integration
      - python -m coverage xml -i --data-file=integration_data -o reports/integration-coverage.xml
    resources:
      - name: packages
      - name: reports
    artifacts:
      - name: reports
           
  ## Upload coverage to codecov
  - name: Upload unit tests coverage to Codecov
    secrets:
      - CODECOV_TOKEN
    commands:
      - ls reports
      - curl -Os https://uploader.codecov.io/latest/linux/codecov
      - chmod +x codecov
      - echo $CODECOV_TOKEN
      - ./codecov -t $CODECOV_TOKEN -Z -v -F unit -f reports/unit-coverage.xml
    resources:
      - name: packages
      - name: reports

  - name: Upload integration tests coverage to Codecov
    secrets:
      - CODECOV_TOKEN
    commands:
      - curl -Os https://uploader.codecov.io/latest/linux/codecov
      - chmod +x codecov
      - echo $CODECOV_TOKEN
      - ./codecov -t $CODECOV_TOKEN -Z -v -F integration -f reports/integration-coverage.xml 
    resources:
      - name: packages 
      - name: reports
       
  